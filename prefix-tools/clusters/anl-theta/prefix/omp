#!/usr/bin/env bash

# Wrapper for launching OpenMPI tools on Theta: mpirun, prun, prte, pterm, etc

set -e

if [[ -z "$EPREFIX" ]]
then
	echo "ERROR: env var EPREFIX not set to root dir of prefix" 1>&2
	echo "       (was script run not from within prefix?)" 1>&2
	exit 2
fi

omp_tool=$(basename $0)

args=()
mpirun_args=(
	#-v
	#--mca pml_base_verbose 100
	##--mca odls_base_verbose 100
	#--mca opal_verbose 100
	#--mca opal_base_verbose 100
	##--mca ras_base_verbose 100
	#--mca errmgr_base_verbose 100
	#--mca oob_base_verbose 100
	#--mca routed_base_verbose 100
	#--mca plm_base_verbose 100
	#--mca plm_alps_debug 1

	# Required! Only 'direct' routed works on Theta, rest fail to spawn
	# NOTE: this is insufficient! OpenMPI (PRRTE) must be built without
	# any other routed modules (./autogen.pl --include routed-direct)
	--mca routed direct
	#--mca routed binomial
	#--mca routed radix

	# Select transport: built-in uGNI
	#--mca pml_ob1_priority 100
	#--mca btl_base_verbose 100
	##--mca btl_ugni_verbose 100


	# Select transport: UCX
	#--mca pml ucx
	#--mca pml_ucx_priority 100
	#--mca pml_ucx_verbose 100

	# Select transport: OFI libfabric
	#
	# Requires patch to odls ('default', or any other odls) to not close
	# file descriptors in forked child, because ofi's uGNI backend needs
	# to query alpslli for credentials (unlike built-in uGNI transport,
	# OFI does not rely on PMI_GNI_PTAG variables set by alps odls).
	#
	#--mca mtl ofi
	#--mca mtl_ofi_priority 100
	#--mca mtl_ofi_verbose 100
	#--mca mtl_base_verbose 100
	#--mca pml_ucx_priority 0

	# Select transport: TCP
	#--mca btl self,tcp
	#--mca btl_tcp_if_include ipogif0
	# Also works: --mca btl_tcp_if_include 10.128.0.0/14

	# OOB uses TCP, regardless of the main transport
	--mca oob_tcp_if_exclude 10.237.0.0/16,10.236.0.0/16

	#--mca shmem_base_verbose 100
	#--mca shmem mmap

	# We want alps odls, but can't explicitly select it here, because
	# mpirun loads odls too (on service node, and alps odls fails there);
	# so have to rely on priority to select alps.
	# NOTE: The hardcoded priorities are broken in OpenMPI <5.x (alps odls
	# not selected); needs patch
	#--mca odls alps
)

# Can't set via --mca, since need to be applied to "projects" other than OMPI
# Don't have --prmca (yet?): https://github.com/open-mpi/ompi/issues/7285
# NOTE: these need to also be listed in .prefixenv to be forwarded
mca_vars=(
	#PRTE_MCA_prte_base_verbose=100
	#PRTE_MCA_prte_pmix_verbose=100
	#PRTE_MCA_pmix_base_verbose=100
	#PRTE_MCA_pmix_server_verbose=100

	# Default timeout (3sec) has been observed to expire even on debug q
	PRTE_MCA_pmix_server_max_wait=120
)

# mpirun needs to talk to ALPS, so it neds to load its libs at runtime
alps_libs=(cray-alps cray-pmi cray-xpmem cray-ugni cray-wlm_detect
		cray-udreg cray-sysutils)

alps_libs_paths="$(PATH=$HOST_PATH pkg-config ${alps_libs[@]} --libs-only-L | \
	sed 's/ \?-L/:/g' | cut -d':' -f2- )"

# By default mpirun adds Prefix to LD_LIBRARY_PATH, which breaks loading
# of host's /bin/bash by aprun (when launching orted -- aprun executes the
# command given to it via the host's shell). The value for the prefix that
# mpirun chooses is either the prefix from the path to the mpirun binary
# OR the --prefix argument when given.
#
# So, we have to pass --prefix and point it to a non-existant path.
# However when passing --prefix, mpirun cannot be invoked by a full path,
# because then mpirun autodetects this as a conflict between --prefix and
# the full path (instead of just taking --prefix as the overriding one).
# So, we invoke mpirun via the executable name by appending Prefix to
# PATH.
if [[ "${omp_tool}" != pterm ]]
then
	args+=(--prefix /dev/null)
	args+=("${mpirun_args[@]}")
fi

# Host PATH needed for apstat which is invoked downstream of this cmd
PATH=$PATH:$HOST_PATH LD_LIBRARY_PATH="${alps_libs_paths}" \
	exec env ${mca_vars[@]} ${EPREFIX}/usr/bin/${omp_tool} ${args[@]} "$@"
