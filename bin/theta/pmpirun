#!/bin/bash

set -e
#set -x

usage() {
	echo "USAGE: $0 prefix_path args_to_mpirun... command program args..." 1>&2
	echo "      'command' is a keyword (also effectively a no-op in bash)" 1>&2
}

if [[ "$#" -lt 1 ]]
then
	echo "ERROR: invalid arguments" 1>&2
	exit 1
fi

prefix=$1
shift 1

mpirun_args=()
while [[ "$#" -gt 0 && "$1" != "command" ]]
do
	mpirun_args+=($1)
	shift
done
if [[ "$#" = 0 || "$1" != "command" ]]
then
	echo "ERROR: invalid arguments: no command"
	usage
	exit 1
fi
shift # command

mpirun_args+=(
	#-v
	--mca pml_base_verbose 100
	#--mca odls_base_verbose 100
	--mca opal_verbose 100
	--mca opal_base_verbose 100
	#--mca ras_base_verbose 100
	--mca plm_base_verbose 100
	--mca plm_alps_debug 1

	# Select transport: built-in uGNI
	--mca pml_ob1_priority 100
	--mca btl_base_verbose 100
	#--mca btl_ugni_verbose 100


	# Select transport: UCX
	#--mca pml ucx
	#--mca pml_ucx_priority 100
	#--mca pml_ucx_verbose 100

	# Select transport: OFI libfabric
	#
	# Requires patch to odls ('default', or any other odls) to not close
	# file descriptors in forked child, because ofi's uGNI backend needs
	# to query alpslli for credentials (unlike built-in uGNI transport,
	# OFI does not rely on PMI_GNI_PTAG variables set by alps odls).
	#
	#--mca mtl ofi
	#--mca mtl_ofi_priority 100
	#--mca mtl_ofi_verbose 100
	#--mca mtl_base_verbose 100
	#--mca pml_ucx_priority 0

	#--mca shmem_base_verbose 100
	#--mca shmem mmap

	# We want alps odls, but can't explicitly select it here, because
	# mpirun loads odls too (on service node, and alps odls fails there);
	# so have to rely on priority to select alps.
	# NOTE: The hardcoded priorities are broken in OpenMPI <5.x (alps odls
	# not selected); needs patch
	#--mca odls alps
)

# Can't set via --mca, since need to be applied to "projects" other than OMPI
# Don't have --prmca (yet?): https://github.com/open-mpi/ompi/issues/7285
# NOTE: these need to also be listed in .prefixenv to be forwarded
mca_vars+=(
	#PRTE_MCA_prte_base_verbose=100
	#PRTE_MCA_prte_pmix_verbose=100
	#PRTE_MCA_pmix_base_verbose=100
	#PRTE_MCA_pmix_server_verbose=100

	# very important: otherwise, big jobs fail with timeout SPAWN PMIx request
	PRTE_MCA_pmix_server_max_wait=8000
)

# this is the tmpirun from casper-utils/bin/theta
exec env ${mca_vars[@]} tmpirun ${mpirun_args[@]} ${prefix}/startprefix -c "crayrun bash -c \"$(echo $@)\""
#exec tmpirun ${mpirun_args[@]} /usr/bin/env
